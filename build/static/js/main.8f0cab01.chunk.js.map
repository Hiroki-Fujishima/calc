{"version":3,"sources":["js/const/calcParam.js","js/calc/components/calcButton.jsx","js/calc/containers/calcButton.js","js/calc/modules/calcAction.js","js/const/actionTypes.js","js/calc/components/numberButton.jsx","js/calc/containers/numberButton.js","js/calc/components/calcResult.jsx","js/calc/containers/calcResult.js","App.js","serviceWorker.js","js/calc/modules/calcReducer.js","js/store/rootReducer.js","js/calc/services/calcService.js","js/calc/services/numberService.js","js/calc/services/equalService.js","js/calc/services/clearService.js","js/calc/controllers/calcController.js","js/store/rootSaga.js","js/store/createStore.js","index.js"],"names":["CALC_PARAM","calcButton","this","props","param","onClick","plus","minus","multiply","equal","clear","divide","React","Component","connect","dispatch","type","numberButton","putNumber","num","payload","calcResult","operator","num2","state","calc","App","className","Boolean","window","location","hostname","match","initialState","showingResult","calculate","action","run","console","log","select","status","nextNum","put","prevNum","prevNum2","String","toResultCalc","result","pushButton","fork","calcService","numberService","equalService","clearService","takeEvery","routeSaga","all","calcController","sagaMiddleware","createSagaMiddleware","store","reduxCreateStore","combineReducers","rootReducer","applyMiddleware","logger","rootSaga","configureStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8f0cab01.chunk.js","sourcesContent":["/**\n * ポイント\n * あらかじめ、使用する文字列は決めておく\n */\n\nexport const CALC_PARAM = {\n  PLUS: '+',\n  MINUS: '-',\n  MULTIPLY: 'x',\n  DIVIDE: '÷',\n  EQUAL: '=',\n  CLEAR: 'AC', \n};\n","import React from \"react\";\nimport { CALC_PARAM } from \"../../const/calcParam\";\n\nclass calcButton extends React.Component {\n  render() {\n    if (this.props.param === CALC_PARAM.PLUS) {\n      return (\n        <button onClick={() => this.props.plus(this.props.param)}>\n          {this.props.param}\n        </button>\n      );\n    }\n    if (this.props.param === CALC_PARAM.MINUS) {\n      return (\n        <button onClick={() => this.props.minus(this.props.param)}>\n          {this.props.param}\n        </button>\n      );\n    }\n    if (this.props.param === CALC_PARAM.MULTIPLY) {\n      return (\n        <button onClick={() => this.props.multiply(this.props.param)}>\n          {this.props.param}\n        </button>\n      );\n    }\n    if (this.props.param === CALC_PARAM.EQUAL) {\n      return (\n        <button onClick={() => this.props.equal()}>\n          {this.props.param}\n        </button>\n      );\n    }\n    if (this.props.param === CALC_PARAM.CLEAR) {\n      return (\n        <button onClick={() => this.props.clear()}>\n          {this.props.param}\n        </button>\n      );\n    }\n    return (\n      <button onClick={() => this.props.divide(this.props.param)}>\n        {this.props.param}\n      </button>\n    );\n  }\n}\n\nexport default calcButton;\n","import { connect } from 'react-redux';\nimport { plus, minus, multiply, divide, equal, clear, } from '../modules/calcAction';\nimport calcButton from '../components/calcButton';\n\nfunction mapStateToProps() {\n  return {};\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    plus: () => dispatch(plus()),\n    minus: () => dispatch(minus()),\n    multiply: () => dispatch(multiply()),\n    divide: () => dispatch(divide()),\n    equal: () => dispatch(equal()),\n    clear: () => dispatch(clear()),\n\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(calcButton);","import {\n  PUSH_PLUS_BUTTON_REQUEST,\n  PUSH_NUMBER_BUTTON_REQUEST,\n  PUSH_MINUS_BUTTON_REQUEST,\n  PUSH_MULTIPLY_BUTTON_REQUEST,\n  PUSH_DIVIDE_BUTTON_REQUEST,\n  PUSH_EQUAL_REQUEST,\n  PUSH_CLEAR_BUTTON_REQUEST,\n} from \"../../const/actionTypes\";\n\n/** from\n * Actionは、ユーザーが起こすイベントを定義します\n */\n\nexport function putNumber(num) {\n  return { type: PUSH_NUMBER_BUTTON_REQUEST, payload: num };\n}\nexport function plus() {\n  return { type: PUSH_PLUS_BUTTON_REQUEST };\n}\nexport function minus() {\n  return { type: PUSH_MINUS_BUTTON_REQUEST };\n}\nexport function multiply() {\n  return { type: PUSH_MULTIPLY_BUTTON_REQUEST };\n}\nexport function divide() {\n  return { type: PUSH_DIVIDE_BUTTON_REQUEST };\n}\nexport function equal() {\n  return { type: PUSH_EQUAL_REQUEST };\n}\nexport function clear() {\n  return { type: PUSH_CLEAR_BUTTON_REQUEST };\n}\n","export const PUSH_PLUS_BUTTON_REQUEST = \"PUSH_PLUS_BUTTON_REQUEST\";\nexport const PUSH_PLUS_BUTTON_SUCCESS = \"PUSH_PLUS_BUTTON_SUCCESS\";\nexport const PUSH_MINUS_BUTTON_REQUEST = \"PUSH_MINUS_BUTTON_REQUEST\";\nexport const PUSH_MINUS_BUTTON_SUCCESS = \"PUSH_MINUS_BUTTON_SUCCESS\";\nexport const PUSH_MULTIPLY_BUTTON_REQUEST = \"PUSH_MULTIPLY_BUTTON_REQUEST\";\nexport const PUSH_MULTIPLY_BUTTON_SUCCESS = \"PUSH_MULTIPLY_BUTTON_SUCCESS\";\nexport const PUSH_DIVIDE_BUTTON_REQUEST = \"PUSH_DIVIDE_BUTTON_REQUEST\";\nexport const PUSH_DIVIDE_BUTTON_SUCCESS = \"PUSH_DIVIDE_BUTTON_SUCCESS\";\nexport const PUSH_NUMBER_BUTTON_REQUEST = \"PUSH_NUMBER_BUTTON_REQUEST\";\nexport const PUSH_NUMBER_BUTTON_SUCCESS = \"PUSH_NUMBER_BUTTON_SUCCESS\";\nexport const PUSH_EQUAL_REQUEST = \"PUSH_EQUAL_REQUEST\";\nexport const PUSH_EQUAL_SUCCESS = \"PUSH_EQUAL_SUCCESS\";\nexport const PUSH_CLEAR_BUTTON_REQUEST = \"PUSH_CLEAR_BUTTON_REQUEST\";\nexport const PUSH_CLEAR_BUTTON_SUCCESS = \"PUSH_CLEAR_BUTTON_SUCCESS\";","import React from \"react\";\n\nclass numberButton extends React.Component {\n  render() {\n    return (\n      <button onClick={() => this.props.putNumber(this.props.num)}>\n        {this.props.num}\n      </button>\n    );\n  }\n}\n\nexport default numberButton;\n","import { connect } from \"react-redux\";\nimport { putNumber } from \"../modules/calcAction\";\nimport numberButton from \"../components/numberButton\";\n\nfunction mapStateToProps() {\n  return {};\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    putNumber: (num) => dispatch(putNumber(num)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(numberButton);\n","import React from \"react\";\n\nclass calcResult extends React.Component {\n  render() {\n    /**\n     * 下記処理\n     * this.propsから、num, operator, num2を取り出す\n     */\n    const { num, operator, num2 } = this.props;\n    return (\n      /**\n       * 下記処理 ||\n       * numがnull, undefined, 空白, 0のときは文字を表示\n       */\n      <div>\n        {num || num === 0 ? num : \"Please input value\"}\n        {operator}\n        {num2 || null}\n      </div>\n    );\n  }\n}\n\nexport default calcResult;\n","import { connect } from \"react-redux\";\nimport { plus, minus, multiply, divide, clear, } from \"../modules/calcAction\";\nimport calcResult from \"../components/calcResult\";\n\nfunction mapStateToProps(state) {\n  return {\n    num: state.calc.num,\n    num2: state.calc.num2,\n    operator: state.calc.operator,\n  };\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    plus: () => dispatch(plus()),\n    minus: () => dispatch(minus()),\n    multiply: () => dispatch(multiply()),\n    divide: () => dispatch(divide()),\n    clear: () => dispatch(clear()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(calcResult);\n","import React from 'react';\nimport './App.css';\nimport CalcButton from './js/calc/containers/calcButton';\nimport NumberButton from './js/calc/containers/numberButton';\nimport CalcResult from './js/calc/containers/calcResult';\nimport { CALC_PARAM } from './js/const/calcParam';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <CalcResult />\n      <div><NumberButton num={7} /><NumberButton num={8} /><NumberButton num={9} /><CalcButton param={CALC_PARAM.DIVIDE} /></div>\n      <div><NumberButton num={4} /><NumberButton num={5} /><NumberButton num={6} /><CalcButton param={CALC_PARAM.MULTIPLY} /></div>\n      <div><NumberButton num={1} /><NumberButton num={2} /><NumberButton num={3} /><CalcButton param={CALC_PARAM.MINUS} /></div>\n      <div><CalcButton param={CALC_PARAM.CLEAR} /><NumberButton num={0} /><CalcButton param={CALC_PARAM.EQUAL} /><CalcButton param={CALC_PARAM.PLUS} /></div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  PUSH_PLUS_BUTTON_REQUEST,\n  PUSH_NUMBER_BUTTON_SUCCESS,\n  PUSH_MULTIPLY_BUTTON_REQUEST,\n  PUSH_MINUS_BUTTON_REQUEST,\n  PUSH_DIVIDE_BUTTON_REQUEST,\n  PUSH_EQUAL_SUCCESS,\n  PUSH_CLEAR_BUTTON_SUCCESS,\n} from \"../../const/actionTypes\";\nimport { CALC_PARAM } from \"../../const/calcParam\";\n\nconst initialState = {\n  /**\n   * 左辺\n   */\n  num: '',\n  /**\n   * 右辺\n   */\n  num2: 0,\n  /**\n   * 四則演算文字列\n   * CALC_PARAMのいずれかが入る\n   */\n  operator: \"\",\n  /**\n   * 計算結果表示中 → true\n   * 計算途中 → false\n   */\n  showingResult: false,\n  /**\n   * よくわからない\n   */\n  calculate: false,\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case PUSH_NUMBER_BUTTON_SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      };\n\n    case PUSH_PLUS_BUTTON_REQUEST:\n      return {\n        ...state,\n        operator: CALC_PARAM.PLUS,\n      };\n    case PUSH_MINUS_BUTTON_REQUEST:\n      return {\n        ...state,\n        operator: CALC_PARAM.MINUS,\n      };\n    case PUSH_MULTIPLY_BUTTON_REQUEST:\n      return {\n        ...state,\n        operator: CALC_PARAM.MULTIPLY,\n      };\n    case PUSH_DIVIDE_BUTTON_REQUEST:\n      return {\n        ...state,\n        operator: CALC_PARAM.DIVIDE,\n      };\n      case PUSH_CLEAR_BUTTON_SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case PUSH_EQUAL_SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      };\n      \n    default:\n      return state;\n  }\n}\n","import calc from '../calc/modules/calcReducer';\n\nexport default  {\n  calc\n};","import { put, select } from \"redux-saga/effects\";\nimport * as TYPES from \"../../const/actionTypes\";\n\nfunction* run(action) {\n  console.log(\"----------------------- in -action\");\n  console.log(action);\n\n  const status = yield select((state) => state);\n  const num = status.calc.num;\n  const nextNum = num * 1;\n\n  if (nextNum < 100) {\n    yield put({\n      type: TYPES.PUSH_PLUS_BUTTON_SUCCESS,\n      payload: nextNum,\n    });\n  }\n}\n\nexport default { run };\n","import { put, select } from \"redux-saga/effects\";\nimport * as TYPES from \"../../const/actionTypes\";\n\nfunction* run(action) {\n  const num = action.payload;\n  const status = yield select((state) => state);\n  /**\n   * 下の処理\n   * status.calcオブジェクトから、numを取り出す\n   * 取り出したnumは、prevNumとして変数名を付与する\n   */\n  const { num: prevNum, num2: prevNum2, operator } = status.calc;\n  /**\n   * 下の処理\n   * 三項演算子\n   * もし、operatorが空白のとき、変数calcNumにはprevNumを格納する\n   * もし、operatorが空白でないとき、変数calcNumにはprevNum2を格納する\n   */\n  let calcNum = operator === \"\" ? prevNum : prevNum2;\n  const nextNum = (calcNum + String(num)) * 1;\n  /**\n   * これからしたいこと\n   * operatorが空白のとき、\n   * ・保存先をnumに\n   * operatorが空白でないとき、\n   * ・保存先をnum2に\n   */\n  if (operator === \"\") {\n    yield put({\n      type: TYPES.PUSH_NUMBER_BUTTON_SUCCESS,\n      payload: {\n        num: nextNum,\n      },\n    });\n  } else {\n    yield put({\n      type: TYPES.PUSH_NUMBER_BUTTON_SUCCESS,\n      payload: {\n        num2: nextNum,\n      },\n    });\n  }\n}\n\nexport default { run };\n","import { put, select } from \"redux-saga/effects\";\nimport * as TYPES from \"../../const/actionTypes\";\nimport { CALC_PARAM } from \"../../const/calcParam\";\n\nfunction toResultCalc(num, num2, operator) {\n  if(operator === CALC_PARAM.PLUS) {\n    return num + num2;\n  } if(operator === CALC_PARAM.MINUS) {\n    return num - num2;\n  } if(operator === CALC_PARAM.MULTIPLY) {\n    return num * num2;\n  } if(operator === CALC_PARAM.DIVIDE) {\n    return num / num2;\n  } return num;\n}\n\n\nfunction* run() {\n  /**\n   * ここは計算をするところ\n   */\n  const status = yield select(state => state.calc);\n  /**\n   * 計算に必要な素材をModel(state)から取得します\n   */\n  const {\n    num, num2, operator,\n  } = status;\n  const result = toResultCalc(num, num2, operator);\n  yield put({\n    type: TYPES.PUSH_EQUAL_SUCCESS,\n    payload: {\n      num: result,\n      num2: 0,\n      operator: '',\n    }\n  })\n}\n\nexport default { run };\n","import { put } from \"redux-saga/effects\";\nimport * as TYPES from \"../../const/actionTypes\";\n\nfunction* run() {\n  yield put({\n    type: TYPES.PUSH_CLEAR_BUTTON_SUCCESS,\n    payload: {\n      num: \"\",\n      num2: 0,\n      operator: \"\",\n    },\n  });\n}\n\nexport default { run };\n","import { takeEvery, fork } from \"redux-saga/effects\";\nimport {\n  PUSH_PLUS_BUTTON_REQUEST,\n  PUSH_NUMBER_BUTTON_REQUEST,\n  PUSH_EQUAL_REQUEST,\n  PUSH_CLEAR_BUTTON_REQUEST,\n} from \"../../const/actionTypes\";\nimport calcService from \"../services/calcService\";\nimport numberService from \"../services/numberService\";\nimport equalService from \"../services/equalService\";\nimport clearService from \"../services/clearService\";\n\n\n\nfunction* calc(action) {\n  yield fork(calcService.run, action);\n}\n\nfunction* pushButton(action) {\n  yield fork(numberService.run, action);\n}\n\nfunction* equal() {\n  yield fork(equalService.run);\n}\n\nfunction* clear() {\n  yield fork(clearService.run);\n}\n\nexport default function* () {\n  yield takeEvery(PUSH_NUMBER_BUTTON_REQUEST, pushButton);\n  yield takeEvery(PUSH_PLUS_BUTTON_REQUEST, calc);\n  yield takeEvery(PUSH_EQUAL_REQUEST, equal);\n  yield takeEvery(PUSH_CLEAR_BUTTON_REQUEST, clear);\n}\n\n","import { all } from 'redux-saga/effects';\nimport calcController from '../calc/controllers/calcController';\n\nexport default function* routeSaga() {\n   yield all([calcController()]);\n}","import { createStore as reduxCreateStore, applyMiddleware, combineReducers } from 'redux';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\nconst sagaMiddleware = createSagaMiddleware();\nexport default function createStore() {\n  const store = reduxCreateStore(combineReducers(rootReducer), applyMiddleware(logger, sagaMiddleware));\n  sagaMiddleware.run(rootSaga);\n  return store;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport configureStore from './js/store/createStore';\n\nconst store = configureStore();\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}